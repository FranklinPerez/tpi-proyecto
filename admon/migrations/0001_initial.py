# Generated by Django 2.2.5 on 2019-12-03 01:41

import admon.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('numDep', models.IntegerField(primary_key=True, serialize=False)),
                ('nomDep', models.CharField(help_text='Ingrese un departamento', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('nieEst', models.IntegerField(help_text='Codigo del MINED asignado al estudiante', primary_key=True, serialize=False)),
                ('nomEst', models.CharField(help_text='Primer y/o segundo nombre del estudiante', max_length=20)),
                ('apeEst', models.CharField(help_text='Primer y/o segundo apellido del estudiante', max_length=20)),
                ('fecNac', models.DateField(blank=True)),
                ('dirEst', models.CharField(help_text='Direccion del estudiante', max_length=100)),
                ('edadEst', models.IntegerField(blank=True, help_text='Edad actual del estudiante', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EvaluacionDocente',
            fields=[
                ('numEva', models.AutoField(primary_key=True, serialize=False)),
                ('fecVen', models.DateField(validators=[admon.validators.fecha_Mayor_Que_Hoy])),
                ('estado', models.IntegerField(blank=True, choices=[(1, 'Pendiente'), (2, 'Finalizada')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Grado',
            fields=[
                ('nomGra', models.CharField(help_text='nombre del grado', max_length=15, primary_key=True, serialize=False)),
                ('nivGra', models.CharField(help_text='nivel del grado (primer ciclo, segundo ciclo, etc)', max_length=20)),
                ('seccion', models.CharField(help_text='Seccion del grado', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Madre',
            fields=[
                ('duiMad', models.CharField(help_text='Codigo de la madre', max_length=10, primary_key=True, serialize=False)),
                ('nomMad', models.CharField(help_text='Nombre de la madre', max_length=100)),
                ('dirMad', models.CharField(help_text='Direccion de la madre', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Materia',
            fields=[
                ('codMat', models.CharField(help_text='codigo de la materia', max_length=15, primary_key=True, serialize=False)),
                ('nomMat', models.CharField(help_text='nombre de la materia', max_length=15)),
                ('graMat', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admon.Grado')),
            ],
        ),
        migrations.CreateModel(
            name='Padre',
            fields=[
                ('duiPad', models.CharField(help_text='Codigo del padre', max_length=10, primary_key=True, serialize=False)),
                ('nomPad', models.CharField(help_text='Nombre del padre', max_length=100)),
                ('dirPad', models.CharField(help_text='Direccion del padre', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Profesor',
            fields=[
                ('codPro', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('nomPro', models.CharField(max_length=100, validators=[admon.validators.solo_Letras])),
                ('estado', models.CharField(blank=True, choices=[('a', 'activo'), ('i', 'inactivo')], default='a', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Representante',
            fields=[
                ('duiRep', models.CharField(help_text='Codigo del padre', max_length=10, primary_key=True, serialize=False)),
                ('nomRep', models.CharField(help_text='Nombre del padre', max_length=100)),
                ('dirRep', models.CharField(help_text='Direccion del representante', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('codUsu', models.CharField(help_text='Ingrese el Usuario, maximo 10 caracteres', max_length=10, primary_key=True, serialize=False)),
                ('pasUsu', models.CharField(help_text='Ingrese contrase√±a, maximo 20 caracteres', max_length=20)),
                ('tipo_usuario', models.CharField(blank=True, choices=[('p', 'Profesor'), ('s', 'Secretaria'), ('e', 'Estudiante'), ('d', 'Docente'), ('d', 'Orientador')], default='sssssqqqqq', help_text='Tipo de usuario en el sistema', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Registro',
            fields=[
                ('numReg', models.IntegerField(help_text='numero de registro', primary_key=True, serialize=False)),
                ('nota', models.DecimalField(decimal_places=2, help_text='nota del estudiante', max_digits=4)),
                ('ponNot', models.DecimalField(decimal_places=2, help_text='ponderacion del estudiante', max_digits=3)),
                ('year', models.IntegerField(default=2019)),
                ('periodo', models.CharField(blank=True, choices=[('1', '1er periodo'), ('2', '2do periodo'), ('3', '3er periodo'), ('4', '4to periodo')], default='1', help_text='Tipo de nota del estudiante', max_length=15)),
                ('tipo_nota', models.CharField(blank=True, choices=[('n', 'normal'), ('r', 'reposicion')], default='sssssqqqqq', help_text='Tipo de notadel estudiante', max_length=10)),
                ('notEst', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admon.Estudiante')),
                ('notMat', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admon.Materia')),
                ('notPro', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admon.Profesor')),
            ],
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('numMunicipio', models.IntegerField(primary_key=True, serialize=False)),
                ('nomMunicipio', models.CharField(help_text='Ingrese un municipio', max_length=100)),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admon.Departamento')),
            ],
        ),
        migrations.CreateModel(
            name='EvaluacionRespondida',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valPreg0', models.IntegerField(choices=[(1, 'Necesita Mejorar'), (2, 'Regular'), (3, 'Bueno'), (4, 'Muy Bueno'), (5, 'Excelente')])),
                ('valPreg1', models.IntegerField(choices=[(1, 'Necesita Mejorar'), (2, 'Regular'), (3, 'Bueno'), (4, 'Muy Bueno'), (5, 'Excelente')])),
                ('valPreg2', models.IntegerField(choices=[(1, 'Necesita Mejorar'), (2, 'Regular'), (3, 'Bueno'), (4, 'Muy Bueno'), (5, 'Excelente')])),
                ('valPreg3', models.IntegerField(choices=[(1, 'Necesita Mejorar'), (2, 'Regular'), (3, 'Bueno'), (4, 'Muy Bueno'), (5, 'Excelente')])),
                ('valPreg4', models.IntegerField(choices=[(1, 'Necesita Mejorar'), (2, 'Regular'), (3, 'Bueno'), (4, 'Muy Bueno'), (5, 'Excelente')])),
                ('valPreg5', models.IntegerField(choices=[(1, 'Necesita Mejorar'), (2, 'Regular'), (3, 'Bueno'), (4, 'Muy Bueno'), (5, 'Excelente')])),
                ('valPreg6', models.IntegerField(choices=[(1, 'Necesita Mejorar'), (2, 'Regular'), (3, 'Bueno'), (4, 'Muy Bueno'), (5, 'Excelente')])),
                ('valPreg7', models.IntegerField(choices=[(1, 'Necesita Mejorar'), (2, 'Regular'), (3, 'Bueno'), (4, 'Muy Bueno'), (5, 'Excelente')])),
                ('valPreg8', models.IntegerField(choices=[(1, 'Necesita Mejorar'), (2, 'Regular'), (3, 'Bueno'), (4, 'Muy Bueno'), (5, 'Excelente')])),
                ('valPreg9', models.IntegerField(choices=[(1, 'Necesita Mejorar'), (2, 'Regular'), (3, 'Bueno'), (4, 'Muy Bueno'), (5, 'Excelente')])),
                ('totalE', models.IntegerField(blank=True, null=True)),
                ('evaluacion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='admon.EvaluacionDocente')),
            ],
        ),
        migrations.AddField(
            model_name='evaluaciondocente',
            name='profes',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='admon.Profesor'),
        ),
        migrations.AddField(
            model_name='estudiante',
            name='graEst',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admon.Grado'),
        ),
        migrations.AddField(
            model_name='estudiante',
            name='usuario',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admon.Usuario'),
        ),
    ]
